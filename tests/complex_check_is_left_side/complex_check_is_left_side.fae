struct Context {
	scene: *mut Scene
}

enum Scene {
	InGame { shield_health: i32 }
}

fn main() {
	mut scene: Scene = .InGame { shield_health: 10 }
	let scene = scene.&mut
	if scene is scene: InGame {
		scene.shield_health -= 1
	}
	mut context = Context { scene }

	tick_a(context.&mut)

	tick_b(scene)

	tick_c(context.&mut, false)
	tick_c(context.&mut, true)

	tick_d(context.&mut, false)
	tick_d(context.&mut, true)

	if scene is InGame => println(f"shield_health: {scene.shield_health}")
}

fn tick_a(context: *mut Context) {
	if context.scene is scene: InGame {
		scene.shield_health -= 1
	}
}

fn tick_b(scene: *mut Scene) {
	let scene: *mut Scene = scene
	if scene is scene: InGame {
		scene.shield_health -= 1
	}
}

fn tick_c(context: *mut Context, argument: bool) {
	if argument and context.scene is scene: InGame {
		scene.shield_health -= 2
	}
}

fn tick_d(context: *mut Context, argument: bool) {
	if context.scene is scene: InGame and argument {
		scene.shield_health -= 3
	}
}
