import fae::stdout::print_string

struct MyType {
	a: i32
	//commented_a: T
	b: f64
	//commented_b: T
}

struct EmptyA {
}

struct EmptyB {}

const STRING = "Hi there"

fn main() {
	let a = "This is a string\n"
	let b: [u8] = "\"This is a string\""

	mut c = MyType { a: 5, b: 6 }
	c.a = 7
	let c_b = c.b
	c = MyType { a: 5, b: 6, }
	c = MyType {
		a: 7,
		b: 8,
	}
	c = MyType {
		a: 7
		b: 8
	}

	{
		c.b = 55
	}

	let d: u64 = generic_function[u64](54)

	let ptr: &u8 = STRING.pointer
	let len: i64 = STRING.len
	print_string(STRING)
}

generic T
fn generic_function(arg: T): T {
	return arg
}
