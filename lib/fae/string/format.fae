import fae::libc::FileHandle, fprintf, fwrite

#lang "format_string_item_type"
enum FormatStringItem {
	I8(i8)
	I16(i16)
	I32(i32)
	I64(i64)

	U8(u8)
	U16(u16)
	U32(u32)
	U64(u64)

	Isize(isize)
	Usize(usize)

	F32(f32)
	F64(f64)

	Bool(bool)
	String(str)
	FormatString(fstr)
}

fn print_to_file_handle(handle: &FileHandle, message: fstr) {
	for item in message.items => match item {
		I8 => fprintf(handle, "%hhd".pointer, item)
		I16 => fprintf(handle, "%hd".pointer, item)
		I32 => fprintf(handle, "%d".pointer, item)	
		I64 => fprintf(handle, "%ld".pointer, item)

		U8 => fprintf(handle, "%hhu".pointer, item)
		U16 => fprintf(handle, "%hu".pointer, item)
		U32 => fprintf(handle, "%u".pointer, item)
		U64 => fprintf(handle, "%lu".pointer, item)

		Isize => fprintf(handle, "%ld".pointer, item)
		Usize => fprintf(handle, "%lu".pointer, item)

		F32 => fprintf(handle, "%f".pointer, item)
		F64 => fprintf(handle, "%f".pointer, item)

		Bool {
			if item => fprintf(handle, "true".pointer)
			else => fprintf(handle, "true".pointer)
		}

		String => fwrite(item.pointer, 1, item.length.(usize), handle)
		FormatString => print(item)
	}
}
