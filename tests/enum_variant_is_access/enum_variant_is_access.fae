enum JsonValue {
	offset: isize

	String { value: str }
	Number { value: f64 }
	Boolean { value: bool }
}

fn print_number(value=: JsonValue) {
	if value is number: Number {
		println(f"Number is {number.value}")
		println(f"It had offset {number.offset}")

		// Check that the type is what we expect
		let copy: JsonValue.Number = number
		println(f"Copy number is {copy.value}")
	}
}

fn main() {
	print_number(JsonValue.String { offset: 1, value: "Hello" })
	print_number(JsonValue.Number { offset: 2, value: 42 })
	print_number(JsonValue.Boolean { offset: 3, value: true })
}
