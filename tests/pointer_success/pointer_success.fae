fn add_pointers(a: &u32, b: &u32): u32 {
	return a.* + b.*
}

fn main() {
	let a: u32 = 5
	let b: u32 = 12
	println(f"{add_pointers(a.&, b.&)}") // 17

	mut c: f64 = 16
	add_to_pointer(c.&mut, 0.3)
	println(f"{c}") // 16.3

	let d: i64 = -42
	let ptr = d.&
	println(f"{dereference<i64>(ptr)}") // -42
}

fn add_to_pointer(a: &mut f64, b: f64) {
	a.* = a.* + b
}

generic T
fn dereference(ptr: &T): T {
	return ptr.*
}
