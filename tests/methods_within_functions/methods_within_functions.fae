fn main() {
	let float = function<f64>(3)
	println(f"f64: {float}")
	let int = function<i32>(-34)
	println(f"i32: {int}")
}

generic T
fn function(t=: T): T {
	struct Struct {
		t: T
	}

	method Struct
	fn returns_t(): T {
		return self.t
	}

	fn inner(instance=: Struct): T {
		method Struct
		fn inner_method(): T {
			return self.returns_t()
		}

		let c = Struct { t: instance.returns_t() }
		return c.inner_method()
	}

	let a = Struct{ t }
	let b = Struct { t: a.inner_method() }
	return inner(b)
}
