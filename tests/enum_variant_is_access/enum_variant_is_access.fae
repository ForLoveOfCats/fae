import fae::stdout::print_f64, print_isize, print_string, print_newline

enum JsonValue {
	offset: isize

	String { value: str }
	Number { value: f64 }
	Boolean { value: bool }
}

fn print_number(value: JsonValue) {
	if value is number: Number {
		print_string("Number is ")
		print_f64(number.value)
		print_newline()

		print_string("It had offset ")
		print_isize(number.offset)
		print_newline()

		// Check that the type is what we expect
		let copy: JsonValue.Number = number
		print_string("Copy number is ")
		print_f64(copy.value)
		print_newline()
	}
}

fn main() {
	print_number(JsonValue.String { offset: 1, value: "Hello" })
	print_number(JsonValue.Number { offset: 2, value: 42 })
	print_number(JsonValue.Boolean { offset: 3, value: true })
}
