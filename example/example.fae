import fae::stdout::print_string
import fae::libc::StdOutFile, StdInFile, StdInDescription, atol, fflush, printf, rand, read

fn main() {
	play_round()
}

fn play_round() {
	let number = rand().(i64) // TODO: Add modulo to the language
	print_string("Guess the random number\n")

	let buffer = [0.(u8), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

	mut break = false
	while break.! {
		print_string(">>> ")
		fflush(StdOutFile.*)
		mut read_bytes: i64 = 0
		while read_bytes == 0 {
			read_bytes = read(StdInDescription, buffer.pointer, 19)
		}

		buffer[read_bytes] = 0
		fae::libc::puts(buffer.pointer)
		let guess = atol(buffer.pointer)
		printf("You guessed %d\n".pointer, guess)

		if guess < number {
			print_string("Too low\n")
		}

		if guess > number {
			print_string("Too high\n")
		}

		if guess == number {
			print_string("Somehow you got it!")
			return
		}
	}
}
