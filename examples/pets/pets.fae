import fae::stdout::print_string

enum VetSpecialty {
	Cat
	Dog
}

enum BeenTreated {
	Treated
	NotTreated
}

method static BeenTreated
fn from_bool(value: bool): BeenTreated {
	if value {
		return BeenTreated.Treated
	} else {
		return BeenTreated.NotTreated
	}
}

enum Pet {
	name: []u8

	Cat
	Dog { hours_since_last_walk: i32 }
}

method Pet
fn visit_vet(specialty: VetSpecialty): BeenTreated {
	if self.* is Cat and specialty is Cat {
		print_string("Cat vet is treating the cat\n")
		return BeenTreated.Treated
	}

	if self.* is Dog and specialty is Dog {
		print_string("Dog vet is treating the dog\n")
		return BeenTreated.from_bool(true)
	}

	return BeenTreated.NotTreated
}

fn main() {
	let cat: Pet = Pet.Cat { name: "Lola" }
	let dog: Pet = Pet.Dog { name: "Odie", hours_since_last_walk: 3 }

	if dog.visit_vet(VetSpecialty.Dog) is NotTreated {
		print_string("The pet has not been treated\n")
	}
}
